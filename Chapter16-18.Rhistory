for(i in 1:n){
result <- result + 1
Sys.sleep(0.5)
}
return(result)
}
sleep_test(8)
prog_test <- function(n){
result <- 0
progbar <- txtProgressBar(min=0,max=n,style=1,char="=")
for(i in 1:n){
result <- result + 1
Sys.sleep(0.5)
setTxtProgressBar(progbar,value=i)
}
close(progbar)
return(result)
}
prog_test(8)
Sys.time()
t1 <- Sys.time()
Sys.sleep(3)
t2 <- Sys.time()
t2-t1
t1 <- Sys.time()
Sys.sleep(3)
t2 <- Sys.time()
t2-t1
search()
foo <- c(4,1.5,3)
sum(foo)
sum <- function(x){
result <- 0
for(i in 1:length(x)){
result <- result + x[i]^2
}
return(result)
}
sum(foo)
base::sum(foo)
rm(sum)
library("spatstat")
install.packages("spatstat")
install.packages("spatstat")
library("spatstat")
library("car")
cats <- "meow"
library("MASS")
search()
detach("package:car",unload=TRUE)
search()
foo <- data.frame(surname=c("a","b","c","d"),
sex=c(0,1,1,0),height=c(170,168,181,180),
stringsAsFactors=F)
foo
attach(foo)
search()
surname
bar <- data.frame(surname=c("e","f","g","h"),
sex=c(1,0,1,0),weight=c(55,70,87,79),
stringsAsFactors=F)
bar
attach(bar)
search()
height
detach(foo)
search()
save.image("C:/Users/Min Jin/Desktop/Chapter10-12.RData")
savehistory("C:/Users/Min Jin/Desktop/Chapter10-12_history.Rhistory")
spread <- read.xlxs(file="C:\Users\Min Jin\Desktop\advancedstatistic\FINGERalmostBroken.xlsx",header=FALSE,stringsAsFactors=TRUE)
spread <- read.xlxs(file="C:/Users/Min Jin/Desktop/advancedstatistic/FINGERalmostBroken.xlsx",header=FALSE,stringsAsFactors=TRUE)
spread <- FINGERalmostBroken.xlsx(file="C:\Users\Min Jin\Desktop\advancedstatistic\FINGERalmostBroken.xlsx",header=FALSE,stringsAsFactors=TRUE)
spread <- FINGERalmostBroken.xlsx(file="C:/Users/Min Jin/Desktop/advancedstatistic/FINGERalmostBroken.xlsx",header=FALSE,stringsAsFactors=TRUE)
read.xlsx(file.choose(C:/Users/Min Jin/Desktop/advancedstatistic/FINGERalmostBroken.xlsx), sheetIndex = 1)
read.xlsx(file.choose = C:/Users/Min Jin/Desktop/advancedstatistic/FINGERalmostBroken.xlsx), sheetIndex = 1)
read.xlsx(file.choose = "C:/Users/Min Jin/Desktop/advancedstatistic/FINGERalmostBroken.xlsx"", sheetIndex = 1)
s
s
quit
exit
exit()
weather <- read.csv(file="C:/Users/Min Jin/Desktop/advancedstatistic/FINGERalmostBroken.csv")
weather <- read.csv(file="/Users/Min Jin/Desktop/advancedstatistic/FINGERalmostBroken.csv")
weather <- read.xlsx(file="/Users/Min Jin/Desktop/advancedstatistic/FINGERalmostBroken.xlsx")
library(readxl)
weather <- read.xlsx(file="/Users/Min Jin/Desktop/advancedstatistic/FINGERalmostBroken.xlsx")
weather <- read.csv(file="C:/Users/Min Jin/Desktop/advancedstatistic/FINGERalmostBroken.csv")
weather <- read.csv(file="C:/Users/Min Jin/Desktop/advancedstatistic/FINGERalmostBroken.csv", header=T)
weather <- read.csv(file="C:/Users/Min Jin/Desktop/advancedstatistic/FINGERalmostBroken.csv")
weather <- read.csv(file="Users/Min Jin/Desktop/advancedstatistic/FINGERalmostBroken.csv")
file.choose()
w <- read.csv(file="Users/Min Jin/Desktop/advancedstatistic/FINGERalmostBroken.csv")
w <- read.csv(file="Users/Min Jin/Desktop/advancedstatistic/FINGERalmostBroken.csv")
w <- read.csv(file="/Users/Min Jin/Desktop/advancedstatistic/FINGERalmostBroken.csv")
w <- read.csv(file="/Users/Min Jin/Desktop/advancedstatistic/FINGERalmostBroken.csv")
w <- read.csv(file="/Users/Min Jin/Desktop/advancedstatistic/cjp.csv")
w <- read.csv(file="/Users/Min Jin/Desktop/advancedstatistic/ExportedResults.csv")
savehistory("C:/Users/Min Jin/Desktop/advancedstatistic/assignment.Rhistory")
 dbinom(x=5,size=8,prob=1/6)
X.prob <- dbinom(x=0:8,size=8,prob=1/6)
X.prob
sum(X.prob)
round(X.prob,3)
8/6
8*(1/6)*(5/6)
barplot(X.prob,names.arg=0:8,space=0,xlab="x",ylab="Pr(X = x)")
sum(dbinom(x=0:3,size=8,prob=1/6))
pbinom(q=3,size=8,prob=1/6)
1-pbinom(q=2,size=8,prob=1/6)
 qbinom(p=0.95,size=8,prob=1/6)
 rbinom(n=1,size=8,prob=1/6)
rbinom(n=1,size=8,prob=1/6)
rbinom(n=1,size=8,prob=1/6)
rbinom(n=1,size=8,prob=1/6)
rbinom(n=1,size=8,prob=1/6)
rbinom(n=3,size=8,prob=1/6)
rbinom(n=3,size=8,prob=1/6)
rbinom(n=3,size=8,prob=1/6)
rbinom(n=3,size=8,prob=1/6)
rbinom(n=3,size=8,prob=1/6)
 dpois(x=3,lambda=3.22)
dpois(x=0,lambda=3.22)
round(dpois(0:10,3.22),3)
(3.22^3*exp(-3.22))/prod(3:1)
barplot(dpois(x=0:10,lambda=3.22),ylim=c(0,0.25),space=0,
names.arg=0:10,ylab="Pr(X=x)",xlab="x")
ppois(q=2,lambda=3.22)
1-ppois(q=5,lambda=3.22)
barplot(ppois(q=0:10,lambda=3.22),ylim=0:1,space=0,
names.arg=0:10,ylab="Pr(X<=x)",xlab="x")
 rpois(n=15,lambda=3.22)
rpois(n=15,lambda=3.22)
rpois(n=15,lambda=3.22)
rpois(n=15,lambda=3.22)
rpois(n=15,lambda=3.22)
rpois(n=15,lambda=3.22)
rpois(n=15,lambda=3.22)
rpois(n=15,lambda=3.22)
rpois(n=15,lambda=3.22)
rpois(n=15,lambda=3.22)
1/(0.41-0.223)
dunif(x=c(-2,-0.33,0,0.5,1.05,1.2),min=-0.4,max=1.1)
dunif(x=c(0.3,0,0.41),min=0.223,max=0.41)
a1 <- -4/10
 b1 <- 11/10
unif1 <- 1/(b1-a1)
plot(c(a1,b1),rep(unif1,2),type="o",pch=19,xlim=c(a1-1/10,b1+1/10),
ylim=c(0,0.75),ylab="f(x)",xlab="x")+abline(h=0,lty=2)
segments(c(a1-2,b1+2,a1,b1),rep(0,4),rep(c(a1,b1),2),rep(c(0,unif1),each=2),
lty=rep(1:2,each=2))
plot(c(a1,b1),rep(unif1,2),type="o",pch=19,xlim=c(a1-1/10,b1+1/10),ylim=c(0,0.75),ylab="f(x)",xlab="x")+  abline(h=0,lty=2)+segments(c(a1-2,b1+2,a1,b1),rep(0,4),rep(c(a1,b1),2),rep(c(0,unif1),each=2),
lty=rep(1:2,each=2))+ points(c(a1,b1),c(0,0))
segments(c(-0.21,0.6),c(0,0),c(-0.21,0.6),rep(unif1,2),lty=3)
lty=rep(1:2,each=2))+ points(c(a1,b1),c(0,0))+segments(c(-0.21,0.6),c(0,0),c(-0.21,0.6),rep(unif1,2),lty=3)+ polygon(rbind(c(a1,0),c(a1,unif1),c(-0.21,unif1),c(-0.21,0)),col="gray",
border=NA)
plot(c(a1,b1),rep(unif1,2),type="o",pch=19,xlim=c(a1-1/10,b1+1/10),
ylim=c(0,0.75),ylab="f(x)",xlab="x")+abline(h=0,lty=2)+segments(c(a1-2,b1+2,a1,b1),rep(0,4),rep(c(a1,b1),2),rep(c(0,unif1),each=2),
lty=rep(1:2,each=2))+points(c(a1,b1),c(0,0))+segments(c(-0.21,0.6),c(0,0),c(-0.21,0.6),rep(unif1,2),lty=3)+polygon(rbind(c(a1,0),c(a1,unif1),c(-0.21,unif1),c(-0.21,0)),col="gray",
border=NA)
punif(-0.21,min=a1,max=b1)
 1-punif(q=0.6,min=a1,max=b1)
 punif(q=0.6,min=a1,max=b1) - punif(q=-0.21,min=a1,max=b1)
 qunif(p=0.1266667,min=a1,max=b1)
qunif(p=1-1/3,min=a1,max=b1)
runif(n=10,min=a1,max=b1)
xvals <- seq(-4,4,length=50)
fx <- dnorm(xvals,mean=0,sd=1)
fx
pnorm(q=1)-pnorm(q=-1)
mu <- -3.42
sigma <- 0.2
mu.minus.1sig <- mu-sigma
mu.minus.1sig
mu.plus.1sig <- mu+sigma
mu.plus.1sig
 pnorm(q=mu.plus.1sig,mean=mu,sd=sigma) -
pnorm(q=mu.minus.1sig,mean=mu,sd=sigma)
1-pnorm(mu.plus.1sig,mu,sigma)
pnorm(mu.minus.1sig,mu,sigma)
1-0.6826895
0.3173105/2
 xvals <- seq(-5,-2,length=300)
fx <- dnorm(xvals,mean=mu,sd=sigma)
plot(xvals,fx,type="l",xlim=c(-4.4,-2.5),main="N(-3.42,0.2) distribution",
xlab="x",ylab="f(x)")+)")
plot(xvals,fx,type="l",xlim=c(-4.4,-2.5),main="N(-3.42,0.2) distribution",
xlab="x",ylab="f(x)")+)")
plot(xvals,fx,type="l",xlim=c(-4.4,-2.5),main="N(-3.42,0.2) distribution",
xlab="x",ylab="f(x)")+abline(h=0,col="gray")+abline(v=c(mu.plus.1sig,mu.minus.1sig),lty=3:2)+legend("topleft",legend=c("-3.62\n(mean - 1 sd)","\n-3.22\n(mean + 1 sd)"),
lty=2:3,bty="n")
xvals.sub <- xvals[xvals>=mu.minus.1sig & xvals<=mu.plus.1sig]
fx.sub <- fx[xvals>=mu.minus.1sig & xvals<=mu.plus.1sig]
polygon(rbind(c(mu.minus.1sig,0),cbind(xvals.sub,fx.sub),c(mu.plus.1sig,0)),
border=NA,col="gray")
plot(xvals,fx,type="l",xlim=c(-4.4,-2.5),main="N(-3.42,0.2) distribution",
xlab="x",ylab="f(x)")+abline(h=0,col="gray")+abline(v=c(mu.plus.1sig,mu.minus.1sig),lty=3:2)+legend("topleft",legend=c("-3.62\n(mean - 1 sd)","\n-3.22\n(mean + 1 sd)"),
lty=2:3,bty="n")+xvals.sub <- xvals[xvals>=mu.minus.1sig & xvals<=mu.plus.1sig]+ fx.sub <- fx[xvals>=mu.minus.1sig & xvals<=mu.plus.1sig]+polygon(rbind(c(mu.minus.1sig,0),cbind(xvals.sub,fx.sub),c(mu.plus.1sig,0)),
border=NA,col="gray")+ arrows(c(-4.2,-2.7,-2.9),c(0.5,0.5,1.2),c(-3.7,-3.15,-3.4),c(0.2,0.2,1))+text(c(-4.2,-2.7,-2.9),c(0.5,0.5,1.2)+0.05,
labels=c("0.159","0.159","0.682"))
qnorm(p=0.159,mean=mu,sd=sigma)
 qnorm(p=1-0.25,mean=mu,sd=sigma)
 hist(chickwts$weight,main="",xlab="weight")
 qqnorm(chickwts$weight,main="Normal QQ plot of weights")
qqline(chickwts$weight,col="gray")
 qqnorm(chickwts$weight,main="Normal QQ plot of weights")+qqline(chickwts$weight,col="gray")
rnorm(n=7,mu,sigma)
 fakedata1 <- rnorm(n=71)
 fakedata2 <- rnorm(n=710)
 qqnorm(fakedata1,main="Normal QQ plot of generated N(0,1) data; n=71")
qqline(fakedata1,col="gray")
 qqnorm(fakedata1,main="Normal QQ plot of generated N(0,1) data; n=71") + qqline(fakedata1,col="gray")
qqnorm(fakedata2,main="Normal QQ plot of generated N(0,1) data; n=710") +  qqline(fakedata2,col="gray")
pnorm(78,80.2,1.1)
 pnorm(81.5,80.2,1.1)-pnorm(80.5,80.2,1.1)
 qnorm(0.2,80.2,1.1)
round(rnorm(5,80.2,1.1),1)
round(rnorm(5,80.2,1.1),1)
 qnorm(1-0.05)
qt(1-0.05,df=1)
 qt(1-0.05,df=6)
qt(1-0.05,df=20)
 xvals <- seq(0,10,length=200)
plot(xvals,dexp(x=xvals,rate=1.65),xlim=c(0,8),ylim=c(0,1.65),type="l",
xlab="x",ylab="f(x)")
lines(xvals,dexp(x=xvals,rate=1),lty=2)
 plot(xvals,dexp(x=xvals,rate=1.65),xlim=c(0,8),ylim=c(0,1.65),type="l",
xlab="x",ylab="f(x)")+lines(xvals,dexp(x=xvals,rate=1),lty=2)+lines(xvals,dexp(x=xvals,rate=0.4),lty=3)+abline(v=0,col="gray")+abline(h=0,col="gray")+legend("topright",legend=c("EXP(1.65)","EXP(1)","EXP(0.4)"),lty=1:3)
lambda.e <- 107/120
lambda.e
1-pexp(q=2.5,rate=lambda.e)
pexp(25/60,lambda.e)
qexp(p=0.15,lambda.e)
 xvals <- seq(16,28,by=0.1)
fx.samp <- dnorm(xvals,22,1.5/sqrt(5))
plot(xvals,fx.samp,type="l",lty=2,lwd=2,xlab="",ylab="")+abline(h=0,col="gray")+fx <- dnorm(xvals,22,1.5)+lines(xvals,fx,lwd=2)+legend("topright",legend=c("raw obs. distbn.","sampling distbn. (mean)"),
lty=1:2,lwd=c(2,2),bty="n")
pnorm(21.5,mean=22,sd=1.5)
pnorm(21.5,mean=22,sd=1.5/sqrt(5))
plot(xvals,fx.samp,type="l",lty=2,lwd=2,xlab="",ylab="")+abline(v=21.5,col="gray")
plot(xvals,fx.samp,type="l",lty=2,lwd=2,xlab="",ylab="")+abline(v=21.5,col="gray")+xvals.sub <- xvals[xvals<=21.5]+fx.sub <- fx[xvals<=21.5]+fx.samp.sub <- fx.samp[xvals<=21.5]+ polygon(cbind(c(21.5,xvals.sub),c(0,fx.sub)),density=10)+ polygon(cbind(c(21.5,xvals.sub),c(0,fx.samp.sub)),density=10,
angle=120,lty=2)
 obs <- rnorm(5,mean=22,sd=1.5)
bos
obs
 obs.mean <- mean(obs)
obs.mean
obs.sd <- sd(obs)
obs.sd
obs.mean.se <- obs.sd/sqrt(5)
obs.mean.se
t4 <- (21.5-obs.mean)/obs.mean.se
t4
 pt(t4,df=4)
xvals <- seq(-5,5,length=100)
 fx.samp.t <- dt(xvals,df=4)
 plot(xvals,dnorm(xvals),type="l",lty=2,lwd=2,col="gray",xlim=c(-4,4),
xlab="",ylab="")+abline(h=0,col="gray")+ lines(xvals,fx.samp.t,lty=3,lwd=2)
xlab="",ylab="")+abline(h=0,col="gray")+ lines(xvals,fx.samp.t,lty=3,lwd=2)+polygon(cbind(c(t4,-5,xvals[xvals<=t4]),c(0,0,fx.samp.t[xvals<=t4])),
density=10,lty=3)
 plot(xvals,dnorm(xvals),type="l",lty=2,lwd=2,col="gray",xlim=c(-4,4),xlab="",ylab="")+ polygon(cbind(c(t4,-5,xvals[xvals<=t4]),c(0,0,fx.samp.t[xvals<=t4])),
density=10,lty=3)+legend("topright",legend=c("N(0,1) standard","t (4 df)"),
col=c("gray","black"),lty=2:3,lwd=c(2,2),bty="n")
p.hat <- 80/118
p.hat
 118*p.hat
118*(1-p.hat)
p.se <- sqrt(p.hat*(1-p.hat)/118)
p.se
 pvals <- seq(p.hat-5*p.se,p.hat+5*p.se,length=100)
p.samp <- dnorm(pvals,mean=p.hat,sd=p.se)
plot(pvals,p.samp,type="l",xlab="",ylab="",
xlim=p.hat+c(-4,4)*p.se,ylim=c(0,max(p.samp)))+abline(h=0,col="gray")
pvals.sub <- pvals[pvals>=0.7 & pvals<=0.75]
 p.samp.sub <- p.samp[pvals>=0.7 & pvals<=0.75]
polygon(cbind(c(0.7,pvals.sub,0.75),c(0,p.samp.sub,0)),
border=NA,col="gray")
plot(pvals,p.samp,type="l",xlab="",ylab="",
+ xlim=p.hat+c(-4,4)*p.se,ylim=c(0,max(p.samp)))+abline(h=0,col="gray")
plot(pvals,p.samp,type="l",xlab="",ylab="",
xlim=p.hat+c(-4,4)*p.se,ylim=c(0,max(p.samp)))+abline(h=0,col="gray")+ pvals.sub <- pvals[pvals>=0.7 & pvals<=0.75]+ p.samp.sub <- p.samp[pvals>=0.7 & pvals<=0.75]+polygon(cbind(c(0.7,pvals.sub,0.75),c(0,p.samp.sub,0)),
border=NA,col="gray")
pnorm(0.75,mean=p.hat,sd=p.se) - pnorm(0.7,mean=p.hat,sd=p.se)
temp.sample <- rnorm(n=5,mean=22,sd=1.5)
temp.sample
temp.mean <- mean(temp.sample)
 temp.mean
temp.sd <- sd(temp.sample)
temp.sd
 temp.se <- temp.sd/sqrt(5)
temp.se
 1-0.05/2
critval <- qt(0.975,df=4)
critval
pt(critval,4)-pt(-critval,4)
temp.mean-critval*temp.se
temp.mean+critval*temp.se
 temp.mean+c(-1,1)*qt(p=0.9,df=4)*temp.se
 temp.mean+c(-1,1)*qt(p=0.995,df=4)*temp.se
p.hat <- 80/118
p.hat
p.se <- sqrt(p.hat*(1-p.hat)/118)
p.se
qnorm(0.95)
p.hat+c(-1,1)*qnorm(0.95)*p.se
dbinom(18,size=20,prob=0.07) + dbinom(19,size=20,prob=0.07) +
dbinom(20,size=20,prob=0.07)
snacks <- c(87.7,80.01,77.28,78.76,81.52,74.2,80.71,79.5,77.87,81.94,80.7,
82.32,75.78,80.19,83.91,79.4,77.52,77.62,81.4,74.89,82.95,
73.59,77.92,77.18,79.83,81.23,79.28,78.44,79.01,80.47,76.23,
78.89,77.14,69.94,78.54,79.7,82.45,77.29,75.52,77.21,75.99,
81.94,80.41,77.7)
n <- length(snacks)
snack.mean <- mean(snacks)
snack.mean
 snack.sd <- sd(snacks)
snack.sd
snack.se <- snack.sd/sqrt(n)
snack.se
snack.T <- (snack.mean-80)/snack.se
snack.T
> pt(snack.T,df=n-1)
pt(snack.T,df=n-1)
snack.mean+c(-1,1)*qt(0.975,n-1)*snack.se
 t.test(x=snacks,mu=80,alternative="less")
One Sample t-test
data: snacks
t = -2.3644, df = 43, p-value = 0.01132
alternative hypothesis: true mean is less than 80
95 percent confidence interval:
-Inf 79.68517
sample estimates:
mean of x
t.test(x=snacks,mu=80,alternative="less")
t.test(x=snacks,mu=80,alternative="two.sided")$conf.int
snacks2 <- c(80.22,79.73,81.1,78.76,82.03,81.66,80.97,81.32,80.12,78.98,
79.21,81.48,79.86,81.06,77.96,80.73,80.34,80.01,81.82,79.3,
79.08,79.47,78.98,80.87,82.24,77.22,80.03,79.2,80.95,79.17,81)
 snack2.mean <- mean(snacks2)
 snack2.mean
 snack2.sd <- sd(snacks2)
snack2.sd
 t.test(x=snacks2,y=snacks,alternative="greater",conf.level=0.9)
(snack2.mean-snack.mean) +
c(-1,1)*qt(0.95,df=60)*sqrt(snack.sd^2/44+snack2.sd^2/31)
 snack.sd/snack2.sd
 men <- c(102,87,101,96,107,101,91,85,108,67,85,82)
women <- c(73,81,111,109,143,95,92,120,93,89,119,79,90,126,62,92,77,106,
105,111)
mean(men)
sd(men)
mean(women)
sd(women)
sd(women)/sd(men)
t.test(x=men,y=women,alternative="two.sided",conf.level=0.95,var.equal=TRUE)
rate.before <- c(52,66,89,87,89,72,66,65,49,62,70,52,75,63,65,61)
 rate.after <- c(51,66,71,73,70,68,60,51,40,57,65,53,64,56,60,59)
rate.d <- rate.after-rate.before
rate.d
 rate.dbar <- mean(rate.d)
 rate.dbar
rate.sd <- sd(rate.d)
rate.sd
rate.T <- rate.dbar/(rate.sd/sqrt(16))
rate.T
pt(rate.T,df=15)
 t.test(x=rate.after,y=rate.before,alternative="less",conf.level=0.95,
paired=TRUE)
rate.dbar-qt(0.975,df=15)*(rate.sd/sqrt(16))
 rate.dbar+qt(0.975,df=15)*(rate.sd/sqrt(16))
sick <- c(0,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,0,0,0,1)
 sum(sick)
p.hat <- mean(sick)
p.hat
29*0.2
29*0.8
 Z <- (p.hat-0.2)/sqrt(0.2*0.8/29
Z
Z <- (p.hat-0.2)/sqrt(0.2*0.8/29
)
Z
2*(1-pnorm(Z))
p.hat+c(-1,1)*qnorm(0.975)*sqrt(p.hat*(1-p.hat)/29)
prop.test(x=sum(sick),n=length(sick),p=0.2,correct=FALSE)
 x1 <- 180
 n1 <- 233
p.hat1 <- x1/n1
 p.hat1
x2 <- 175
n2 <- 197
p.hat2 <- x2/n2
p.hat2
p.star <- (x1+x2)/(n1+n2)
 p.star
Z <- (p.hat2-p.hat1)/sqrt(p.star*(1-p.star)*(1/n1+1/n2))
Z
1-pnorm(Z)
prop.test(x=c(x2,x1),n=c(n2,n1),alternative="greater",correct=FALSE)
 (p.hat2-p.hat1) +
c(-1,1)*qnorm(0.975)*sqrt(p.hat1*(1-p.hat1)/n1+p.hat2*(1-p.hat2)/n2)
 hairy <- c(2,3,2,3,2,1,3,3,2,2,3,2,2,2,3,3,3,2,3,2,2,2,1,3,2,2,2,1,2,2,3,
2,2,2,2,1,2,1,1,1,2,2,2,3,1,2,1,2,1,2,1,3,3)
x <- seq(0,20,length=100)
plot(x,dchisq(x,df=1),type="l",xlim=c(0,15),ylim=c(0,0.5),ylab="density")+ lines(x,dchisq(x,df=5),lty=2)+ lines(x,dchisq(x,df=10),lty=3)+ abline(h=0,col="gray")
plot(x,dchisq(x,df=1),type="l",xlim=c(0,15),ylim=c(0,0.5),ylab="density")+ lines(x,dchisq(x,df=5),lty=2)+ lines(x,dchisq(x,df=10),lty=3)+ abline(h=0,col="gray")+ abline(v=0,col="gray")+ legend("topright",legend=c("df=1","df=5","df=10"),lty=1:3)
n <- length(hairy)
n
 hairy.tab <- table(hairy)
hairy.tab
 hairy.tab/n
expected <- 1/3*n
 expected
hairy.matrix <- cbind(1:3,hairy.tab,expected,
(hairy.tab-expected)^2/expected)
 dimnames(hairy.matrix) <- list(c("clean","beard OR mous.",
"beard AND mous."),
c("i","Oi","Ei","(Oi-Ei)^2/Ei"))
 hairy.matrix
X2 <- sum(hairy.matrix[,4])
X2
 1-pchisq(X2,df=2)
chisq.test(x=hairy.tab)
 chisq.test(x=hairy.tab,p=c(0.25,0.5,0.25))
skin <- matrix(c(20,32,8,52,9,72,8,32,16,64,30,12),4,3,
dimnames=list(c("Injection","Tablet","Laser","Herbal"),
c("None","Partial","Full")))
skin
kr <- nrow(skin)
kc <- ncol(skin)
rowSums(skin)
colSums(skin)
rep(colSums(skin),each=kr)
rep(colSums(skin),each=kr)*rowSums(skin)
 rep(colSums(skin),each=kr)*rowSums(skin)/sum(skin)
skin.expected <- matrix(rep(colSums(skin),each=kr)*rowSums(skin)/sum(skin),
nrow=kr,ncol=kc,dimnames=dimnames(skin))
skin.expected
 skin.array <- array(data=cbind(skin,skin.expected,
(skin-skin.expected)^2/skin.expected),
dim=c(kr,kc,3),
dimnames=list(dimnames(skin)[[1]],dimnames(skin)[[2]],
c("O[i,j]","E[i,j]",
"(O[i,j]-E[i,j])^2/E[i,j]")))
skin.array
X2 <- sum(skin.array[,,3])
X2
1-pchisq(X2,df=(kr-1)*(kc-1))
chisq.test(x=skin)
typeI.tester <- function(mu0,sigma,n,alpha,ITERATIONS=10000){
pvals <- rep(NA,ITERATIONS)
for(i in 1:ITERATIONS){
temporary.sample <- rnorm(n=n,mean=mu0,sd=sigma)temporary.mean <- mean(temporary.sample)
temporary.sd <- sd(temporary.sample)
pvals[i] <- 1-pt((temporary.mean-mu0)/(temporary.sd/sqrt(n)),df=n-1)
}
return(mean(pvals<alpha))
typeI.tester <- function(mu0,sigma,n,alpha,ITERATIONS=10000){
pvals <- rep(NA,ITERATIONS)
for(i in 1:ITERATIONS){
temporary.sample <- rnorm(n=n,mean=mu0,sd=sigma)
temporary.mean <- mean(temporary.sample)
temporary.sd <- sd(temporary.sample)
pvals[i] <- 1-pt((temporary.mean-mu0)/(temporary.sd/sqrt(n)),df=n-1)
}
return(mean(pvals<alpha))
}
 typeI.tester(mu0=0,sigma=1,n=40,alpha=0.05)
typeI.tester(mu0=-4,sigma=0.3,n=60,alpha=0.01)
critval <- qnorm(1-0.05,mean=0,sd=1/sqrt(30))
critval
pnorm(critval,mean=0.5,sd=1/sqrt(30))
typeII.tester <- function(mu0,muA,sigma,n,alpha,ITERATIONS=10000){
pvals <- rep(NA,ITERATIONS)
for(i in 1:ITERATIONS){
temporary.sample <- rnorm(n=n,mean=muA,sd=sigma)
temporary.mean <- mean(temporary.sample)
temporary.sd <- sd(temporary.sample)
pvals[i] <- 1-pt((temporary.mean-mu0)/(temporary.sd/sqrt(n)),df=n-1)
}
return(mean(pvals>=alpha))
}
 typeII.tester(mu0=0,muA=0.5,sigma=1,n=30,alpha=0.05)
typeII.tester(mu0=0,muA=0.5,sigma=1,n=30,alpha=0.01)
typeII.tester(mu0=0,muA=0.5,sigma=1.1,n=30,alpha=0.01)
typeII.tester(mu0=0,muA=0.5,sigma=1.2,n=30,alpha=0.01)
 typeII.tester(mu0=0,muA=0.5,sigma=1.2,n=20,alpha=0.01)
 typeII.tester(mu0=0,muA=0.5,sigma=1.2,n=40,alpha=0.01)
 typeII.tester(mu0=0,muA=0.4,sigma=1.2,n=40,alpha=0.01)
 typeII.tester(mu0=0,muA=0.6,sigma=1.2,n=40,alpha=0.01)
power.tester <- function(nvec,...){
nlen <- length(nvec)
result <- rep(NA,nlen)
pbar <- txtProgressBar(min=0,max=nlen,style=3)
for(i in 1:nlen){
result[i] <- 1-typeII.tester(n=nvec[i],...)
setTxtProgressBar(pbar,i)
}
close(pbar)
return(result)
}
sample.sizes <- 5:100
pow <- power.tester(nvec=sample.sizes,
mu0=0,muA=0.6,sigma=1.2,alpha=0.01,ITERATIONS=5000)
pow
 minimum.n <- sample.sizes[min(which(pow>=0.8))]
minimum.n
 pow2 <- power.tester(nvec=sample.sizes,
mu0=0,muA=0.6,sigma=1.2,alpha=0.05,ITERATIONS=5000)
 minimum.n2 <- sample.sizes[min(which(pow2>0.8))]
minimum.n2
 plot(sample.sizes,pow,xlab="sample size n",ylab="simulated power")+points(sample.sizes,pow2,col="gray")+abline(h=0.8,lty=2)+ abline(v=c(minimum.n,minimum.n2),lty=3,col=c("black","gray"))+legend("bottomright",legend=c("alpha=0.01","alpha=0.05"),
col=c("black","gray"),pch=1)
save.image("C:\\Users\\Min Jin\\Desktop\\advancedstatistic\\Chapter16-18.RData")
